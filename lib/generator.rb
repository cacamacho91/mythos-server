module Generator
  extend ActiveSupport::Concern

  def generate_full_character
    new_character = {
      alias: generate_alias,
      motto: generate_motto,
      species: generate_species,
      alignment: generate_alignment,
      traits_positive: "#{generate_trait_positive}, #{generate_trait_positive}, #{generate_trait_positive}",
      traits_negative: "#{generate_trait_negative}, #{generate_trait_negative}, #{generate_trait_negative}",
      age: generate_age,
      status: generate_status,
      gender: generate_gender,
      feats: generate_feats
    }
    new_character[:first_name] = generate_first_name(new_character[:species],new_character[:gender])
    new_character[:last_name] = generate_last_name(new_character[:species])
    new_character[:sprite_data] = generate_sprite(new_character[:species])
    new_character[:bio] = generate_bio(new_character[:first_name], new_character[:last_name], new_character[:gender], new_character[:age])
    return new_character
  end

  def generate_first_name(species='any', gender='undefined')
    orc_m_names = ["Abzag", "Abzrolg", "Abzug", "Agganor", "Aghurz", "Agnar", "Agrakh", "Agrobal", "Agstarg", "Aguz", "Ahzug", "Arghragdush", "Arghur", "Ashzu", "Aturgh", "Avreg", "Azarg", "Azgarub", "Azimbul", "Azogu", "Azrath", "Azulg", "Balarkh", "Balknakh", "Balmeg", "Balorgh", "Baloth", "Balrook", "Balzag", "Bargo", "Bargrug", "Bash", "Bashagorn", "Batgrul", "Bazrag", "Begnar", "Begozug", "Bekhwug", "Bhagrun", "Biknuk", "Bisquelas", "Blodrat", "Boagog", "Boggeryk", "Bogham", "Bognash", "Bogodug", "Bogzul", "Boldarkh", "Bolg", "Bolgrul", "Borab", "Boragrul", "Borbuz", "Borgath", "Borgh", "Bormolg", "Borolg", "Borth", "Borz", "Borzighu", "Borzugh", "Bothamul", "Braadoth", "Braghul", "Brog", "Brogdul", "Brugagikh", "Brugdush", "Brughamug", "Brulak", "Bugnerg", "Bugunh", "Bulg", "Bullig", "Bulugbek", "Bulzog", "Bulozog", "Bumnog", "Buragrub", "Burush", "Burzgrag", "Burzunguk", "Burzura", "Buzog", "Carzog", "Charlvain", "Cognor", "Dagnub", "Dorzogg", "Dragom", "Dromash", "Drudun", "Dugakh", "Dugan", "Dugroth", "Dugtosh", "Dugug", "Dugugikh", "Dular", "Dulph", "Dulphago", "Dulrat", "Dumolg", "Durak", "Durang", "Dushgor", "Dushkul", "Dushugg", "Fangoz", "Farbalg", "Fheg", "Gag", "Gahar", "Gahgdar", "Gahznar", "Gard", "Gargak", "Garikh", "Garmeg", "Garnikh", "Gashdug", "Gasheg", "Gezdak", "Gezorz", "Ghagrub", "Ghak", "Ghaknag", "Ghakorz", "Ghamron", "Ghamulg", "Ghash", "Ghashur", "Ghatrugh", "Ghaturn", "Ghaz", "Ghobargh", "Ghogurz", "Ghorn", "Ghornag", "Ghornugag", "Ghrategg", "Ghromrash", "Ghrubugbash", "Ghrum", "Gladba", "Glag", "Glagbor", "Glamalg", "Glarg", "Glaz", "Glazgor", "Glazulg", "Glegokh", "Gloorag", "Gloorot", "Glorgzorgo", "Gloth", "Glothozug", "Glothun", "Glud", "Glundeg", "Glunrum", "Glunurgakh", "Glurdag", "Glurnt", "Glushonkh", "Gluthob", "Gluthush", "Gobur", "Goburbak", "Godrun", "Gogaz", "Gogbag", "Gogrikh", "Goh", "Gohazgu", "Gohorg", "Golbag", "Golg", "Goorgul", "Goragol", "Gorak", "Goramalg", "Gorbakh", "Gorblad", "Gorbu", "Gordag", "Gorgath", "Gorgrolg", "Gorlar", "Gorotho", "Gorrath", "Goruz", "Gorzesh", "Gothag", "Gothurg", "Gozarth", "Graalug", "Graguz", "Gralturg", "Grashbag", "Grashegg", "Grashub", "Gravik", "Grazhwu", "Grezgor", "Grishduf", "Grodagur", "Grodoguz", "Grog", "Gromazgu", "Gronov", "Grookh", "Grubdosh", "Grudogub", "Grugnur", "Grulbash", "Gruldum", "Gruloq", "Gruluk", "Grulzul", "Grumth", "Grunyun", "Grushbub", "Grushnag", "Gruudus", "Gruzdash", "Gruznak", "Gulargh", "Gulburz", "Gulug", "Gulzog", "Gunagud", "Gunda", "Gunran", "Gurag", "Gurg", "Gurgozod", "Gurlak", "Guruzug", "Gushagub", "Gushorg", "Guzg", "Gwilherm", "Hagard", "Hazbur", "Horak", "Hothmuk", "Ilthag", "Inazzur", "Kadrun", "Kargnuth", "Kazok", "Kelrog", "Kentosh", "Khal", "Khamagash", "Kharsh", "Kharsthun", "Khartag", "Khoruzoth", "Khralek", "Kurog", "Kirgut", "Klang", "Klovag", "Kogaz", "Kradauk", "Krodak", "Krog", "Krogrash", "Kulth", "Kurd", "Kurlash", "Lagarg", "Lagrog", "Lahkgarg", "Lakhalg", "Lakhdosh", "Larhoth", "Larob", "Lashbag", "Latumph", "Laurig", "Lazgel", "Lob", "Logbur", "Logogru", "Logrun", "Lorbash", "Lothdush", "Lothgud", "Lozotusk", "Lozruth", "Lug", "Lugbagg", "Lugbur", "Lugdakh", "Lugdugul", "Lugnikh", "Lugolg", "Lugrots", "Lugrun", "Lugulg", "Lugzod", "Lum", "Lumgol", "Lungruk", "Lurash", "Lurbozog", "Lurg", "Lurgonash", "Luzmash", "Maaga", "Mag", "Magrol", "Magunh", "Makhoguz", "Makhug", "Marzul", "Maugash", "Mauhoth", "Mazabakh", "Mazgro", "Mazogug", "Megorz", "Mekag", "Mog", "Mogazgur", "Mogrub", "Mokhrul", "Mokhul", "Monru", "Morbrogug", "Mordrog", "Mordugul", "Mordularg", "Morgaz", "Morgbrath", "Morlak", "Morothmash", "Morotub", "Mort", "Mothozog", "Muduk", "Mudush", "Muglugd", "Mugrub", "Muhaimin", "Mulatub", "Mulgargh", "Mulgu", "Mulur", "Mulzalt", "Murdodosh", "Murgonak", "Murgoz", "Murgrud", "Murkh", "Murlog", "Murukh", "Murzog", "Muzb", "Muzbar", "Muzdrulz", "Muzgalg", "Muzgash", "Muzgu", "Muzogu", "Nagoth", "Nagrul", "Nahzgra", "Nahzush", "Nakhul", "Namoroth", "Narazz", "Nargbagorn", "Narhag", "Narkhagikh", "Narkhozikh", "Narkhukulg", "Narkularz", "Nash", "Nashruth", "Nenesh", "Norgol", "Nugok", "Nugwugg", "Nunkuk", "Obdeg", "Obgol", "Obgurob", "Obrash", "Ofglog", "Ogmash", "Ogog", "Ogorosh", "Ogozod", "Ogruk", "Ogularz", "Ogumalg", "Ogzor", "Okrat", "Olfim", "Olfin", "Olfrig", "Olgol", "Olugush", "Ontogu", "Oodeg", "Oodegu", "Oogron", "Oorg", "Oorgurn", "Oorlug", "Ordooth", "Orgak", "Orgdragog", "Orgdugrash", "Orgotash", "Orgush", "Orntosh", "Orzbara", "Orzuk", "Osgrikh", "Osgulug", "Othbug", "Othigu", "Othogor", "Othohoth", "Otholug", "Othukul", "Othulg", "Othzog", "Ozor", "Pergol", "Putor", "Rablarz", "Ragbul", "Ragbur", "Ragnast", "Ramash", "Ramazbur", "Ramorgol", "Ramosh", "Razgor", "Razgugul", "Razgurug", "Rhosh", "Rogbum", "Rognar", "Rogrug", "Rogurog", "Roguzog", "Rokaug", "Rokut", "Roog", "Rooghub", "Rooglag", "Rorburz", "Rozag", "Rugdugbash", "Rugdrulz", "Rugmeg", "Ruzgrol", "Sgagul", "Sgolag", "Shab", "Shagol", "Shagrod", "Shakh", "Shakhighu", "Shamagug", "Shamar", "Shamlakh", "Shargarkh", "Shargunh", "Sharkagub", "Sharkuzog", "Sharnag", "Shogarz", "Shogorn", "Shugral", "Shukul", "Shulthog", "Shurkol", "Skagurn", "Skagwar", "Skalgunh", "Skalguth", "Skarath", "Skordo", "Skulzak", "Slagwug", "Slayag", "Slegbash", "Smagbogoth", "Smauk", "Snabazkur", "Snagbash", "Snagdurl", "Snagg", "Snagh", "Snakh", "Snakzut", "Snalikh", "Snarbugag", "Snargorg", "Snazumph", "Sneg", "Snegbug", "Snegburgak", "Snegh", "Sneghar", "Snikhbat", "Snoog", "Snoorg", "Snugar", "Snugok", "Snukh", "Snushbat", "Sogh", "Spagel", "Storgh", "Stugbrulz", "Stugbulukh", "Szugburg", "Szugogroth", "Targak", "Targoth", "Tazgol", "Tazgul", "Thagam", "Thagbruth", "Thagbush", "Thakaz", "Thakh", "Thakush", "Tharag", "Tharkul", "Thaz", "Thazeg", "Thaznog", "Thegur", "Thereg", "Tholog", "Thoogh", "Thorkh", "Thorzh", "Thorzhul", "Thrag", "Thragdosh", "Thragosh", "Threg", "Thrug", "Thrugb", "Thrunikh", "Thukbug", "Thungdosh", "Todrak", "Togbrig", "Tograz", "Torg", "Torug", "Tugam", "Tugawuz", "Tumuthag", "Tungthu", "Ufthag", "Ugdush", "Uggnath", "Ugorz", "Ugruntuk", "Uguntig", "Ugurz", "Ulagash", "Ulagug", "Ulang", "Ulgdagorn", "Ulghesh", "Ulmamug", "Ulozikh", "Undrigug", "Undugar", "Ungruk", "Unrahg", "Unthrikh", "Uragor", "Urak", "Urdbug", "Urgdosh", "Urok", "Ushang", "Usn", "Usnagikh", "Uugus", "Uulgarg", "Uuth", "Uznom", "Vargos", "Vulmon", "Vundrum", "Waghuth", "Wardush", "Wort", "Wuzgu", "Yagarg", "Yagorkh", "Yagramak", "Yakegg", "Yamukuz", "Yargob", "Yarnabakh", "Yarnag", "Yarulg", "Yat", "Yatog", "Yggnast", "Yggoz", "Yggruk", "Yggurz", "Yozth", "Yzzgol", "Zagh", "Zaghurbak", "Zagrakh", "Zagrugh", "Zbulg", "Zegol", "Zgog", "Zhagush", "Zhasim", "Zhosh", "Zilbash", "Zogbag", "Zugnor", "Zulbash", "Zulbek", "Zulgozu", "Zulgroth", "Zulgukh", "Zulohoth", "Zungarg", "Zunlog"]
    orc_f_names = ["Abimfash", "Adkul", "Adlugbuk", "Agazu", "Agdesh", "Aglash", "Agli", "Agral", "Agrash", "Agrulla", "Agzurz", "Akarah", "Akash", "Akgruhl", "Akkra", "Aklash", "Akur", "Alga", "Anbarah", "Arakh", "Argulla", "Argurgol", "Arzakh", "Arzorag", "Ashaka", "Ashgara", "Ashgel", "Ashrashag", "Atarga", "Atoga", "Atorag", "Atugol", "Atzurbesh", "Aza", "Azabesh", "Azadhai", "Azga", "Azhnakha", "Azhnolga", "Azhnura", "Azilkh", "Azlakha", "Azulga", "Baag", "Baagug", "Badush", "Bafthaka", "Bagda", "Bagrugbesh", "Bagul", "Bagula", "Barza", "Barazal", "Bashotha", "Batara", "Batasha", "Batorabesh", "Bazbava", "Bazgabesh", "Bazgara", "Bhagruan", "Bizra", "Bluga", "Bolaag", "Bolash", "Bolgar", "Bolugbeka", "Borbgur", "Borbuga", "Borgburakh", "Borgdorga", "Borghak", "Borgrara", "Boroth", "Borzog", "Brekgun", "Bugbekh", "Bugbesh", "Bugha", "Bulag", "Bularkh", "Bulfor", "Bumava", "Bumbuk", "Bumzuna", "Dagarha", "Darezha", "Drienne", "Droka", "Druga", "Dufbash", "Dulasha", "Dulfra", "Dulfraga", "Dulkhi", "Dulroi", "Dulzugha", "Dumoga", "Dumuguk", "Dumula", "Dumurzog", "Duragma", "Durash", "Durga", "Durgura", "Durhaz", "Durogbesh", "Dushug", "Erisa", "Fnagdesh", "Gahgra", "Gargahz", "Gargum", "Garl", "Garlor", "Garlub", "Garotusha", "Ghamzeh", "Gharakul", "Gharn", "Ghat", "Gheshol", "Ghobub", "Ghogogg", "Ghorbog", "Ghorzolga", "Ghratutha", "Glagag", "Glagosh", "Glarikha", "Glash", "Glath", "Glatha", "Glathuhl", "Glathut", "Glega", "Glesh", "Glolbikla", "Glothum", "Glurbasha", "Glurduk", "Glurmghal", "Glurzul", "Gluth", "Gluthesh", "Gnush", "Gogul", "Golakha", "Golga", "Gonbubal", "Gonbush", "Gondubaga", "Goorga", "Grabash", "Graghesh", "Grahla", "Grahuar", "Grakguhl", "Graklha", "Grash", "Grashla", "Grashug", "Grazda", "Grazubesha", "Grenbet", "Groddi", "Grubalash", "Grubathag", "Grubazh", "Grubesha", "Grugleg", "Grumgha", "Grundag", "Gruzbura", "Guazh", "Gula", "Gulara", "Gulgula", "Gulorz", "Gulugash", "Gulza", "Gulzurgol", "Gunzga", "Gurhul", "Gurikha", "Gursthuk", "Gurum", "Guth", "Guurzash", "Guuth", "Guz", "Guzash", "Guzmara", "Haghai", "Harfza", "Harza", "Hurabesh", "Ilg", "Irsugha", "Jorthan", "Junlock", "Kashurthag", "Kelagi", "Khagral", "Khagruk", "Khaguga", "Khaguur", "Kharekh", "Kharza", "Kharzolga", "Khazrakh", "Kora", "Korgha", "Krithgra", "Kroma", "Kruaga", "Kuhlon", "Kurz", "Lagabul", "Laganakh", "Lagbaal", "Lagbuga", "Lagdabash", "Lagra", "Lagruda", "Lahzga", "Lakhazga", "Lamazh", "Lambur", "Lamburak", "Lamugbek", "Lamur", "Lamzakha", "Larzgug", "Lashakh", "Lashbesh", "Lashbura", "Lashdura", "Lashgikh", "Lashgurgol", "Lashza", "Lazdutha", "Lazghal", "Lazgara", "Legdul", "Lhazbura", "Lig", "Logdotha", "Loglorag", "Logru", "Lokra", "Lorak", "Lorku", "Lorogdu", "Luga", "Lugharz", "Luglorash", "Lugrugha", "Lugurzog", "Lulgra", "Lurgush", "Luruzesh", "Lurz", "Mabgikha", "Mabgrolabesh", "Mabgrorga", "Mabgrubaga", "Mabgruhl", "Magula", "Maraka", "Marutha", "Maugruhl", "Mazgroth", "Mazrah", "Mazuka", "Megruk", "Moglurkgul", "Mograg", "Mogul", "Mordra", "Morga", "Morndag", "Mornamph", "Morndolag", "Morushna", "Mozgosh", "Mugaga", "Mugumurn", "Muguur", "Mula", "Mulgabesh", "Multa", "Mulzah", "Mulzara", "Murboga", "Murotha", "Murzgut", "Muzgraga", "Naroga", "Narzbash", "Narzdush", "Nazdura", "Nazhag", "Nazhataga", "Nazubesh", "Noguza", "Nulra", "Nunchak", "Nuza", "Ogzaz", "Oorga", "Oorza", "Oorzuka", "Orbuhl", "Orcolag", "Ordatha", "Orgotha", "Orlozag", "Orlugash", "Orluguk", "Orthuna", "Orutha", "Orzbara", "Orzdara", "Orzorga", "Oshgana", "Othbekha", "Othgozag", "Othikha", "Othrika", "Ozrog", "Pruzag", "Pruzga", "Ragbarlag", "Ragushna", "Rakhaz", "Rakuga", "Ranarsh", "Razasha", "Razbela", "Rogag", "Rogba", "Rogbual", "Rogoga", "Rogzesh", "Roku", "Rolbutha", "Rolfikha", "Rolfzal", "Rolga", "Rulbagab", "Rulbza", "Ruldor", "Rulfala", "Rulfub", "Rulfuna", "Rulfzub", "Rulgum", "Sgala", "Sgrugbesh", "Sgrugha", "Sgrula", "Shabaga", "Shabeg", "Shabeshga", "Shabgrut", "Shabon", "Shagareg", "Shagduka", "Shagora", "Shagrum", "Shagrush", "Shagugbeka", "Shagura", "Shakul", "Shaldagan", "Shalug", "Shamuk", "Shamush", "Shara", "Sharbzur", "Sharduka", "Shardush", "Shardzozag", "Sharga", "Shargalash", "Shargduguk", "Shargra", "Sharuk", "Sharushnam", "Shaza", "Shebakh", "Shelboth", "Sheluka", "Shera", "Shgrag", "Sholg", "Shubesha", "Shufdal", "Shufgrut", "Shufthakul", "Shuga", "Shugzur", "Shurkul", "Shuzrag", "Sloobdakha", "Sloogolga", "Sluz", "Snabgrara", "Snabugha", "Snagara", "Snaghusha", "Snarataga", "Snarga", "Snargara", "Snaruga", "Snarzikha", "Sneehash", "Snilga", "Snoogh", "Snushbesh", "Solgra", "Stilga", "Stroda", "Stuga", "Stughrush", "Tamozag", "Theg", "Thegbesh", "Thegshakul", "Thegshalash", "Theshaga", "Theshgoth", "Thishnaku", "Thoga", "Thogra", "Thrugrak", "Thugnekh", "Thulga", "Thushleg", "Tugha", "Ubzigub", "Udai", "Ufalga", "Ufgabesh", "Ufgalash", "Ufgaz", "Ufgel", "Ufgra", "Uftheg", "Ugarnesh", "Ugduk", "Ugrash", "Ugrush", "Uldushna", "Ulfgalash", "Ulg", "Ulgush", "Ulliceta", "Ulsha", "Ulu", "Ulubesh", "Uluga", "Ulukhaz", "Umbaka", "Umbugbek", "Umgubesh", "Umutha", "Umzolabesh", "Undorga", "Undush", "Undusha", "Unsulag", "Uratag", "Urbalash", "Urbutha", "Urbzag", "Urdboga", "Urgarlag", "Urshra", "Uruka", "Urzula", "Usha", "Ushaga", "Ushenat", "Ushruka", "Ushuta", "Uthik", "Uzka", "Vosh", "Vumnish", "Vush", "Vusha", "Yagrigbesh", "Yakhu", "Yarlak", "Yarulorz", "Yashurah", "Yatanakh", "Yatular", "Yatzog", "Yazara", "Yazgruga", "Yazoga", "Zaag", "Zagla", "Zagula", "Zazsha", "Zelguma", "Zubesha", "Zugh", "Zuugarz", "Zuuthag", "Zuuthusha"]
    elf_m_names = ["Abadda","Abarat","Adamar","Adorellan","Adresin","Aduce","Aelrindel","Aerendyl","Aermhar","Aesar","Aeson","Afamrail","Agis","Aglanthol","Ainésilver","Aithlin","Ajaar","Akhelbhen","Akkar","Alabyran","Albondiel","Alinar","Allain","Alok","Alosrin","Althidon","Amrynn","Anarallath","Andaerean","Andrathath","Anfalen","Anlyth","Aolis","Aquilan","Araevin","Arandron","Aravilar","Arbane","Ardreth","Ardryll","Argus","Arkhun","Arkiem","Arl","Arlen","Arun","Ascal","Athtar","Aubric","Aubron","Aulathar","Aulauthar","Aumanas","Aumrauth","Avourel","Baerdelcoam","Baerithryn","Belanor","Beldroth","Bellas","Belstram","Beluar","Bhyrindaar","Biafyndar","Bialaer","Braern","Brindarry","Buttorwyr","Cameron","Chaalmyth","Chathanglas","Cheyrth","Chozzaster","Chylnoth","Cluhurach","Cluym","Cohnal","Conall","Connak","Cornaith","Corym","Cymbiir","Cystenn","Dalyor","Dakath","Dannyd","Daratrine","Darcassan","Darfin","Darthoridan","Deldrach","Delmuth","Delsaran","Dhoelath","Divisav","Drannor","Droth","Druindar","Durlan","Durothil","Dyffros","Earynspieir","Edansyr","Edicûve","Edwyrd","Edyrm","Ehlark","Ehrendil","Eilauver","Elaethan","Elaith","Elandorr","Elanjar","Elashor","Elbauthin","Elbereth","Eldaernth","Eldar","Eldrin","Elénaril","Elenshaer","Elephon","Elhieardacil","Elidyr","Elion","Elkhazel","Ellisar","Elorfindar","Elorshin","Elpaerae","Eltaor","Eltargrim","Emmyth","Entrydal","Erendriel","Erglareo","Eriladar","Erlan","Erlathan","Eroan","Erolith","Eschallus","Estelar","Ethlando","Ettrian","Euchoé","Evindal","Eyrynnhv","Faahresc","Faelar","Faelyn","Faeranduil","Falael","Faoraar","Felaern","Fenian","Fflar","Fhaornik","Fhociin","Filarion","Filvendor","Filverel","Finufaranell","Flardryn","Flinar","Foxfire","Fylson","Gaeleath","Gaelin","Galaeron","Galan","Galather","Ganamede","Gantar","Garrik","Garynnon","Giilvas","Giullio","Glarald","Glorandal","Goronyyv","Grathgor","Haalaari","Hachaam","Haemir","Haladavar","Halafarin","Halamar","Haldreithen","Halflar","Halgondas","Halpaeril","Halueth","Halueve","Haryk","Hastos","Hatharal","Hiflanyl","Hoccar","Horith","Hubyr","Iefyr","Ievos","Ihimbraskar","Ilbryn","Illianaro","Ilimitar","Iliphar","Ilitharath","Illithor","Illitran","Ilphas","Ilrune","Ilthuryn","Ilyndrathyl","Inchel","Inialos","Injros","Intevar","Iolas","Iolrath","Itham","Ithraides","Ivlisar","Ivósaar","Ivran","Iymbryl","Iyrandrar","Iyriklaunavan","Jandar","Jannalor","Jaonos","Jassin","Jhaan","Jhaartael","Jhaeros","Jharak","Jharym","Jhuvik","Jonas","Jonik","Jorildyn","Josidiah","Juppar","Kahvoerm","Kalaerede","Katar","Katyr","Keletheryl","Kelvhan","Kendel","Kerym","Keryth","Kesefehon","Khaalindaan","Kharis","Khatar","Khidell","Khiiral","Khilseith","Khuumal","Khyrmn","Khyssoun","Kindroth","Kivessin","Kiyuigh","Klaern","Kolvar","Korrigash","Kroloth","Kuornos","Kuskyn","Kuskyn","Kymil","Kyrtaar","Laeroth","Lafarallin","Lamruil","Laosx","Larongar","Larrel","Lashul","Lathai","Lathlaeril","Leayonadas","Leojym","Lhombaerth","Lhoris","Lianthorn","Llarm","Llewellenar","Llombaerth","Lorsan","Luirlan","Luthais","Luvon","Lyari","Lyklor","Lysanthir","Maasli","Maendellyn","Maeraddyth","Maeral","Maiele","Malgath","Mardeiym","Marikoth","Marlevaur","Melandrach","Melisander","Merellien","Merith","Methild","Mhaenal","Mi’tilarro","Mihangyl","Miilaethorn","Miirphys","Mirthal","Mirthal","Mlartlar","Mlossae","Molonym","Molostroi","Montagor","Morgan","Morthil","Mothrys","Mourn","Myrddin","Myriil","Myrin","Myronthilar","Mythanthar","Naertho","Naeryndam","Naeryndam","Napraeleon","Narbeth","Nardual","Nelaeryn","Nelaeryn","Neldor","Neldor","Nesterin","Nevarth","Nhamashal","Nieven","Nindrol","Ninthalor","Nlossae","Nopos","Norlorn","Nremyn","Nuvian","Nyaalsir","Nylian","Nym","Nyvorlas","Oacenth","Oenel","Ohmbryn","Olaurae","Olinsivver","Olithir","Onas","Oncith","Ondabrar","Ondroth","Onvyr","Orist","Orlpar","Orndacil","Ornthalas","Ornthalas","Ortauré","Orym","Oslarelar","Otaehryn","Otaerhyn","Othorion","Paeral","Paeris","Passilorris","Paulorin","Phaendar","Pharom","Phraan","Pirphal","Pleufan","Purtham","Pyrder","Pyrravym","Pywaln","Pyxaanthal,","Qildor","Quastarte","Quynn","Raeranthur","Raibyr","Ralikanthae","Ralnor","Rathal","Raunaeril","Rauthomyr","Rauvelore","Reluraun","Reluvethel","Rennyn","Reptar","Respen","Rhaac'var","Rhalyf","Rhangyl","Rhenalyrr","Rhespen","Rhistel","Rhothomir","Rhys","Rilitar","Riluaneth","Rolim","Rotheloe","Rothilion","Ruardh","Ruehar","Ruith","Rumathil","Ruvaen","Ruven","Ruvyn","Rychell","Ryfon","Ryul","Ryvvik,","Sadalymn","Saevel","Sakrattars","Samblar","Sandevv","Seanchai","Seith","Selanlar","Selgauth","Shael","Shammath","Sharian","Sharlario","Shaundyl","Shevarash","Shonassir","Shyrrik","Siirist","Silvyr","Simimar","Sinaht","Skalanis","Sontar","Srindin","Strohm","Sudryl","Sundamar","Sylvar","Symkalr","Sythaeryn","Taanyth","Taegen","Taeglyn","Taeral","Taerntym","Taleisin","Tammson","Tamnaeuth","Tamsin","Tanithil","Tannivh","Tannyll","Tanseril","Tanyl","Taranath","Tarathiel","Taredd","Tarosspur","Tarron","Tasar","Tassarion","Tathaln","Tehlmar","Teirist","Tenyajn","Tethir","Thalanil","Thallan","Thatoryl","Thiilthan","Thurdan","Thurruvyn","Tiarshus","Tlannatar","Tolthe","Tordynnar","Toross","Traeliorn","Travaran","Triandal","Triktappic","Tsaer","Tsiilmas","Tyvollus","Saelethil","Saevel","Sakrattars","Seiveril","Sharian","Skalanis","Sinaht","Sudryl","Sythaeryn","Taenaran","Tannivh","Tamnaeuth","Tanyl","Tarathiel","T’karon","Tolthe","Traeliorn","Ualair","Uevareth","Uldreiyn","Uldreiyn","Urddusk","Usunaar","Uthorim","Vaalyun","Vaeril","Valmaxian","Vander","Vartan","Velethuil","Venali","Vesperr","Vesryn","Vesstan","Vhoadan","Vhoori","Vhoorhin","Volodar","Voron","Waernas","Wistari","Wylchyr","Wylym","Wyn","Wyndelleu","Wyqhael","Wyrran","Xalph","Xanotter","Xhalh","Xhalth","Xharlion","Yalathanil","Yeschant","Yhendorn","Ylyndar","Ynloeth","Zabbas","Zaltarish","Zandro","Zaor","Zaos","Zelphar","Zhoron","Zulae"]
    elf_f_names = ["Aelieyeeva","Aelrue","Aelynthi","Aerilaya","Ahrendaaria","Ahrendue","Ahskahala","Ajhalanda","Alaglossa","Alais","Alauthshaee","Alavara","Alea","Alerathla","Allannia","Allisa","Alloralla","Allynna","Almithara","Aloevan","Alvaerele","Aluendalee","Alyndra","Amara","Amaranthae","Amkissra","Amlaruil","Amnestria","Amra","Anaharae","Anarzee","Aneirin","Anhaern","Anyllan","Ara","Araushnee","Aravae","Arcaena","Arielimnda","Arlayna","Arnarra","Artin","Ashemmi","Aubaudameira","Auluua","Aurae","Ava","Axilya","Ayaeqlarune","Azariah","Bhuraelea","Blythswana","Bonnalurie","Braerindra","Caerthynna","Calarel","Cauladra","Chaenath","Chalsarda","Chandrelle","Chasianna","Chichlandra","Chin’nesstre","Chomylla","Cilivren","Ciyradyl","Claire","Csharynn","Daenalaia","Daratrine","Darshee","Dasyra","Dathlue","Dathlue","Dathlue","Delimbiyra","Delshandra","Deularla","Duilya","Eallyrl","Ecaeris","Edraele","Elanalue","Elanil","Elasha","Eldratha","Elénaril","Eletha","Ellarian","Ellifain","Eloen","Elora","Elvandaruil","Embrae","Emvorele","Enajharas","Eshenesra","Essaerae","Esta","Ester","Esyae","Faranni","Faunalyn","Fhaertala","Fieryat","Filaurel","Filauria","Fildaerae","Fox-at-Twilight","Francessca","Gaelira","Gaerradh","Gaylia","Gemstarzah","Ghilanna","Glynnii","Gweyr","Gwynnestri","Gylledha","Haalija","Hacathra","Halaema","Halama","Halaema","Halanaestra","Hamalitia","Haramara","Helartha","Hhora","Holone","Huquethae","Hycis","Iahalae","Ialantha","Ikeshia","Ildilyntra","Ilmadia","Ilyrana","Ilythyrra","Imdalace","Imizael","Immianthe","Imra","Imramarthree","Imryll","Innovindil","Ioelena","Irhaal","Isciira","Ithrythra","Itiireae","Itylra","Jastra","Jeardra","Jhaer","Jhalass","Jhanandra","Jhaumrithe","Jhiilsraa","Ilsevel","Ilyrana","Immianthe","Isilfarrel","Kavrala","Kaylessa","Keerla","Keishara","Kethryllia","Keya","Khiipaera","Kileontheal","Kythaela","Laamtora","Laerdya","Laerune","Laurlaethee","Lazziar","Leilatha","Liluth","Llamryl","Lorelei","Lydi’aleera","Lyraesel","Maaleshiira","Maelyrra","Maeralya","Maith","Makaela","Malruthiia","Mariona","Marissa","Martainn","Meira","Melarue","Merethyl","Merialeth","Meriel","Merlara","Mistale","Mladris","Mnuvae","Morgwais","Moryggan","Muerlara","Mylaela","Mylaerla","Myriani","Naevys","Nakiasha","Nambra","Namyriitha","Nanalethalee","Nanthee","Nanthleene","Naumys","Nlaea","Nuala","Nueleth","Nuovis","Nushala","Nylaathria","Ochyllyss","Oluevaera","Phaerl","Phantyni","Phelorna","Phuingara","Phyrra","Pollae","Puorlaas","Qemba","Quamara","Raejiisa","Raerauntha","Rathiain","Renestrae","Roanmara","Ruavia","Rubrae","Ryllae","Saelihn","Saélihn","Saida","Sakaala","Sariandi","Sarya","Schimae","Seirye","Seldanna","Selussa","Séonais","Shael","Shadowmoon","Shalana","Shalantha","Shalendra","Shalheira","Shandalar","Shanyrria","Sharaera","Sheedra","Sheera","Shialaevar","Shi’larra","Shialaevar","Shoulree","Shyael","Shyael","Shyllisyrr","Sinnafain","Soliania","Soora","Sorsasta","Susklahava","Sylmae","Symrustar","Syndra","Synnorha","Syrune","Syviis","Taenya","Takari","Talaedra","Talanashta","Talila","Talindra","Tamara","Tarasynora","Teharissa","Teryani","Thalaera","Thalanil","Thaola","Thasitalia","Throleatha","Tiatha","Tira’allara","Tiriara","Tisharu","Tsarra","Tyllaetha,","Ulelesse","Unae","Urmicca","Uschymna","Vaervenshalice","Valindra","Vashti","Velaethaunyl","Velatha","Veluthil","Verrona","Vestele","Viansola","Winterflower","Xiiltharra","Yaereene","Yalanilue","Yathlanae","Yeshelné","Yghiilra","Ygrainne","Ynshael","Yrlissa","Yrneha","Yrthraethra","Ysmyrlda","Ytharra","Yulmanda","Z’Beryl","Zhuirentel","Zoastria"]
    halfling_m_names = ["Adalgrim", "Adelard", "Alton", "Andwise", "Anson", "Balbo", "Bandobras", "Beau", "Bill", "Bingo", "Bodo", "Bolger", "Bungo", "Cade", "Calkin", "Cotman", "Cottar", "Drogo", "Dudo", "Eldon", "Falco", "Fastolph", "Filibert", "Flambard", "Fosco", "Garret", "Genrill", "Griffo", "Halfred", "Hildigrim", "Hob", "Holman", "Kepli", "Largo", "Longo", "Lotho", "Lyle", "Milo", "Minto", "Morro", "Mosco", "Mungo", "Odo", "Olo", "Osborn", "Otho", "Paldo", "Peregrin", "Pervince", "Pimpernell", "Polo", "Ponto", "Porto", "Posco", "Ronald", "Rorimac", "Roscoe", "Rufus", "Sam", "Sancho", "Saradac", "Seredoc", "Theadric", "Tolman", "Wellby", "Wilcome"]
    halfling_f_names = ["Adaldrida", "Amranth", "Amaryllis", "Angelica", "Aspodel", "Belba", "Belladonna", "Berylla", "Camellia", "Carissa", "Celandine", "Charmaine", "Cora", "Crystal", "Daisy", "Diamond", "Donamira", "Dora", "Eglantine", "Elanor", "Esmerelda", "Euphemia", "Gilly", "Gwiston", "Hilda", "Jillian", "Lavinia", "Lily", "Lidda", "Lobelia", "Malva", "Marigold", "May", "Melindy", "Mentha", "Merla", "Mimosa", "Mirabella", "Myrtle", "Pansy", "Pearl", "Pedderee", "Peony", "Petrilly", "Poppy", "Portia", "Primula", "Prisca", "Rose", "Ruby", "Seraphina", "Susannah", "Verna", "Viloet"]

    case species 
    when 'orc', 'goblin', 'giant', 'troll', 'ogre'
      return orc_m_names.sample if gender == 'male'
      return orc_f_names.sample if gender ==  'female'
      return (orc_m_names + orc_f_names).sample
    when 'elf', 'nymph', 'mermaid'
      return elf_m_names.sample if gender == 'male'
      return elf_f_names.sample if gender ==  'female'
      return (elf_m_names + elf_f_names).sample
    when 'halfling', 'leprechaun'
      return halfling_m_names.sample if gender == 'male'
      return halfling_f_names.sample if gender ==  'female'
      return (halfling_m_names + halfling_f_names).sample
    end

    #catch all / human
    return Faker::Name.male_first_name if gender == 'male'
    return Faker::Name.female_first_name if gender == 'female'
    return Faker::Name.first_name
  end

  def generate_last_name (species='any')
    orc_last_names = ["Agadbu", "Aglakh", "Agum", "Atumph", "Azorku", "Badbu", "Bagrat", "Bagul", "Bamog", "Bar", "Bargamph", "Bashnag", "Bat", "Batul", "Boga", "Bogamakh", "Bogharz", "Bogla", "Boglar", "Bogrol", "Boguk", "Bol", "Bolak", "Borbog", "Borbul", "Bug", "Bugarn", "Bulag", "Bularz", "Bulfish", "Burbug", "Burish", "Burol", "Buzga", "Dugul", "Dul", "Dula", "Dulob", "Dumul", "Dumulg", "Durga", "Durog", "Durug", "Dush", "Gar", "Gashel", "Gat", "Ghash", "Ghasharzol", "Gholfim", "Gholob", "Ghorak", "Glorzuf", "Gluk", "Glurkub", "Gorzog", "Grambak", "Gulfim", "Gurakh", "Gurub", "Kashug", "Khagdum", "Kharbush", "Kharz", "Khash", "Khashnar", "Khatub", "Khazor", "Lag", "Lagdub", "Largum", "Lazgarn", "Loghash", "Logob", "Logrob", "Lorga", "Lumbuk", "Lumob", "Lurkul", "Lurn", "Luzgan", "Magar", "Magrish", "Mar", "Marob", "Mashnar", "Mogduk", "Moghakh", "Mughol", "Muk", "Mulakh", "Murgol", "Murug", "Murz", "Muzgob", "Muzgub", "Muzgur", "Ogar", "Ogdub", "Ogdum", "Olor", "Olurba", "Orbuma", "Rimph", "Rugob", "Rush", "Rushub", "Shadbuk", "Shagdub", "Shagdulg", "Shagrak", "Shagramph", "Shak", "Sham", "Shamub", "Sharbag", "Sharga", "Sharob", "Sharolg", "Shat", "Shatub", "Shazog", "Shug", "Shugarz", "Shugham", "Shula", "Shulor", "Shumba", "Shuzgub", "Skandar", "Snagarz", "Snagdu", "Ufthamph", "Uftharz", "Ugruma", "Ular", "Ulfimph", "Urgak", "Ushar", "Ushug", "Ushul", "Uzgurn", "Uzuk", "Yagarz", "Yak", "Yargul", "Yarzol", "Agdur", "Arzug", "Badbul", "Bagat", "Bagol", "Barbol", "Bashnarz", "Bazgar", "Bazul", "Bekh", "Birgo", "Bor", "Borgakh", "Borgub", "Born", "Bugurz", "Bulfimorn", "Bumolg", "Burbulg", "Burgal", "Burku", "Burz", "Buzbee", "Dasik", "Drol", "Drom", "Drublog", "Dugronk", "Durbug", "Durgamph", "Durgoth", "Dushnikh", "Fakal", "Garbug", "Gatuk", "Ghammak", "Ghol", "Ghralog", "Goldfolly", "Gorzoth", "Gular", "Gum", "Gurba", "Guthra", "Khamagash", "Khambol", "Khamug", "Khargub", "Khazgur", "Kogg", "Korith", "Korma", "Kruts", "Kush", "Ladba", "Logdum", "Lort", "Lumborn", "Luruk", "Madba", "Makla", "Malak", "Malorz", "Marguz", "Mashul", "Morad", "Murgob", "Murkha", "Murug", "Namor", "Nar", "Narzul", "Nogremor", "Oglurn", "Olub", "Oluk", "Orgak", "Orguk", "Othmog", "Ram", "Rimat", "Ruguk", "Ruumsh", "Shagob", "Shagrak", "Shagronk", "Shar", "Shatub", "Shatur", "Shazgul", "Shelakh", "Shelob", "Sheluk", "Shub", "Shurgak", "Shurkul", "Sgrugdul", "Shugduk", "Shugharz", "Shuhgharz", "Stugbaz", "Stugh", "Thormok", "Ugrush", "Urku", "Urkub", "Urula", "Usharku", "Uzguk", "Vortag", "Wroggin", "Yarzol", "Yggrub"]
    elf_last_names = ["Aelasar","Aelorothi","Aendryr","Aerasumé","Aeravansel","Agayous","Agrivar","Ahmaquissar","Alaenree","Alantar","Alavara","Alastrarra","Alenuath","Alerothi","Alluth","Aloevan","Aluianti","Aluviirsaan","Amalith","Amarallis","Amaratharr","Amarthen","Ammath","Amrallatha","Anuaer","Argentaamn","Arren","Ash","Ashgrove","Audark","Auglamyr","Auglathla","Aunglor","Autumnfire","Bellas","Berethryl","Berilan","Bharaclaiev","Bhephel","Blackhelm","Braegen","Briarbosk","Brightcloak","Brightsong","Brightwing","Caersaelk","Calaudra","Calauth","Camusiil","Cathdeiryn","Ceretlan","Chaadren","Chamaranthe","Clatharla","Cormyth","Coudoarluth","Craulnober","Crystalembers","Dahast","Dawnhorn","Dhorinshyl","Dlardrageth","Doedance","Donnathlascen","Dracoseir","Dree","Duirsar","Durothil","Duskmere","Duthjuth","Ealoeth","Echorn","Elaéyadar","Elassidil","Elian","Ellarian","Elond","Eluarshee","Ereuvyn","Erkowe","Erladden","Eroth","Erlshade","Estelda","Evanara","Eveningfall","Everlove","Evioro","Eyriendor","Faerondaerl","Faerondarl","Falanae","Felinaun","Fellmirr","Fenmarel","Fflannidan","Floshin","Fynnasla","Gildenguard","Goadulphyn","Goldenleaf","Gourael","Greencloak","Gwaelon","Haell","Haerlgent","Haladar","Hawksong","Haevaul","Halavanthlarr","Hlarr","Hyshaanth","Iazymnal","Ibryiil","Ilbaereth","Ilbenalu","Ildacer","Ildroun","Iliathor","Iliathor","Iliathorr","Ilnatar","Immeril","Ipyllasc","Irian","Irithyl","Irithyl","Ithruen","Iydril","Jaglene","Kadelaryn","Kelerandri","Kelpor’ral","Keove","Kevanarial","Korianthil","Kraok","Laelithar","Laralytha","Larenthanil","Larethian","Laughingwater","Leafbower","Leafsigil","Le’Quella","Lharithlyn","Lhoril","Llundlar","Loceath","Lightshiver","Maendellyn","Maerdrym","Melruth","Meirityn","M'Haaren","Miritar","Mistrivvin","Mistwinter","Mithalvarin","Moonbow","Moondown","Moonflower","Moonglade","Moonglamaer","Moonsnow","Moonweather","Morningdove","Mornmist","Mrhulaedir","Nacnar","Naelgrath","Narlbeth","Narlbeth","Neirdre","Nelnueve","Never","Nhachashaal","Nhaéslal","Nharimlur","Nightstar","Nightwing","Nihmedu","Ni’Tessine","Nierde","Nightmeadow","Nimesin","Nlossae","Nlossae","Nolbrae","Nyamtharsar","Nyntynel","Oakstaff","Oakwood","Olortynnal","Olyrnn","Omberdawn","Ongluth","Orama","Orbryn","Orbryn","Ortauré","Oumryn","Phenthae","Pholont","Presrae","Q'Naepp,","Rachiilstar","Raedrimn","Raryndur","Reithel","Revven","Rhaevaern","Rhothomir","Rhuidhen","Rhyllgallohyr","Rivleam","Rivvikyn","Runemaster","Sarsantyr","Selakiir","Selmer","Selorn","Shadowmantle","Shadowwater","Shaeremae","Shaethe","Shalandalan","Sharrith","Shaurlanglar","Shraiee","Shyr","Sicafei","Siltral","Silverbow","Silverhand","Silveroak","Silverspear","Sinaran","Slenderbow","Spellstalker","Soryn","Srinshee","Starnar","Starbrow","Starglance","Starglow","Starym","Stillhawk","Stilmyst","Straeth","Strongbow","Suldusk","Sultaasar","Summerstars","Sunweaver","Swordstar","Symbaern","Talandren","Talesspur","Tamlyranth","Tanagathor","Tarnruth","Tarsap","Tarsis","Tassarion","Taurntyrith","Tellynnan","Teshurr","Thea","Tlanbourn","Tohrthaal","Toralynnsyr","Tornglara","Tornglara","Torthtan","Toryvhallen","Trueshot","Tsornyl","Tyrneladhelu","Uirthur","Ulondarr","Ulongyr","Vandiir","Veverell","Vispasial","Vyshaan","Waelvor","Whitethistle","Windstar","Windwalker","Xantrani","Yeschant","Yhendorn","Yraueme","Yridnae","Yundraer"]
    halfling_last_names = ["Amster", "Ashworthy", "Bandawax", "Boffin", "Bolger", "Bracegirdle", "Brownlock", "Brushgather", "Bullroarer", "Bunce", "Burrows", "Chubb", "Cotton", "Dale", "Dudley", "Gammidge", "Gamwich", "Gardner", "Goodbarrel", "Goodbody", "Greenbottle", "Greenspan", "Grub", "Hamson", "Heathertoe", "Highhill", "Hilltopple", "Hornblower", "Jallisall", "Kaese", "Kalliwart", "Leagallow", "Lindenbrook", "Marmidas", "Melilot", "Millbridge", "Milliciny", "Montajay", "Newtan", "Oldfur", "Orgulas", "Ostgood", "Overhill", "Quettory", "Shortwick", "Sire", "Talbot", "Tealeaf", "Thorngage", "Tighfield", "Tosscobble", "Trill", "Underbough", "Weatherbee"]

    case species
    when 'orc', 'goblin', 'giant', 'troll', 'ogre'
      return orc_last_names.sample
    when 'elf', 'nymph', 'mermaid'
      return elf_last_names.sample
    when 'halfling', 'leprechaun'
      return halfling_last_names.sample
    end
    return rand() > 0.5 ? Faker::Games::ElderScrolls.last_name : Faker::Name.last_name
  end

  def generate_alias
    prefix_alias = ["Amber", "Brown", "Cold", "Crazy", "Curly", "Earth", "Far", "Fast", "Fat", "Fire", "Flow", "Forest", "Free", "Glitter", "Good", "Great", "Green", "Hairy", "Honor", "Healthy", "Home", "Hot", "Laughing", "Lightning", "Little", "Many", "Moon", "Nimble", "Plump", "Pretty", "Quick", "Rain", "Road", "Running", "Scatter", "Shadow", "Silver", "Simple", "Sky", "Slow", "Sly", "Smooth", "Spring", "Sprout", "Stout", "Sun", "Swift", "Tall", "Travelling", "Under", "Warm", "Water", "Wet", "Wild"]
    suffix_alias = ["Ale", "Arrow", "Body", "Bones", "Bottom", "Bread", "Brother", "Burrow", "Caller", "Cloak", "Digger", "Drum", "Eye", "Fellow", "Fingers", "Flower", "Foot", "Fox", "Ghost", "Goat", "Gold", "Grass", "Hand", "Head", "Heart", "Hearth", "Hill", "Lady", "Leaf", "Letters", "Maker", "Man", "Map", "Mind", "One", "Pipe", "Shadow", "Shaker", "Sister", "Skin", "Sleep", "Stick", "Stoat", "Swan", ",Talker", "Taunt", "Tender", "Wanderer", "Weed", "Will", "Wind", "Wit", "Wolf"]
    full_alias = ['Arseface','Chicken Chaser','Deathbringer','Druid','Gladiator','Hood','Liberator','Maleficus','Vile Necromancer','Holy Paladin',"Piemaster",'Lost Pilgrim','Ranger',"Reaper","Runemaster","Sabre","Arrowdodger","Axe-Hands", "Bear-Slayer", "Bloodtusk", "Chief-bane", "Deadeye", "Fire-Caller", "Hammerdeath", "Hammerhand", "Ice-Bringer", "Ironblood", "The Many", "One-Eye", "Strongbow", "Talespinner", "The Axe", "The Bard", "The Beryl-Chested", "The Bold", "The Butcher", "The Cheesemonger", "The Cleaver", "The Corruptor", "The Dark", "The Deceiver", "The Firestarter", "The Gutter-King", "The Gutworm", "The Hungry", "The Impatient", "The Ironfinder", "The Kind", "The Knife", "The Mason", "The Mauler", "The Merry", "The Monster", "The Penitent", "The Proselytizer", "The Recruiter", "The Red", "The Shark", "The Snappy", "The Sot", "The Stewmaster", "The Strong", "The Untamed", "The Tidy Tailor", "Two-Axes", "Trollfeeder"]
    if rand() > 0.5
      return rand()> 0.5 ? "#{prefix_alias.sample} #{suffix_alias.sample}" : "#{prefix_alias.sample}-#{suffix_alias.sample}"
    else 
      return full_alias.sample
    end
  end

  def generate_motto
    return Faker::GreekPhilosophers.quote #=> "Only the educated are free."
    # num = gen_random_num(20)
    # case num
    # when (1)
    #   return Faker::Marketing.buzzwords #=> "rubber meets The road", "sprint to The finish line"
    # when (2..3)
    #   return Faker::Books::Dune.saying #=> "You do not beg the sun for mercy."
    # when (4..5)
    #   return 
    # when (6..7)
    #   return Faker::Games::Dota.quote #=> "Easy now, this stuff is explosive!"
    # when (8..9)
    #   return Faker::Games::Fallout.quote #=> "Democracy is non-negotiable"
    # when (10..11)
    #   return Faker::Games::HeroesOfTheStorm.quote #=> "MEAT!!!"
    # when (12..13)
    #   return Faker::Games::Witcher.quote # => "No Lollygagin'!"
    # when (14..15)
    #   return Faker::Games::LeagueOfLegends.quote #=> "Purge the unjust."
    # when (16..17)
    #   return Faker::Games::WorldOfWarcraft.quote #=> "These are dark times indeed."
    # when (18..19)
    #   return Faker::TvShows::TwinPeaks.quote #=> "The owls are not what they seem."
    # when (19..20)
    #   return Faker::TvShows::VentureBros.quote #=> "Revenge like gazpacho soup, is best served cold, precise and merciless."
    # end
  end

  def generate_species
    ["orc", 'human', 'elf', 'halfling', 'mermaid', 'nymph', 'leprechaun','goblin','giant','troll','ogre', 'undead'].sample #"werewolf" "centaur", "lizard folk", "", "", "", "", "", "vampire", "", , "", "dwarf", ""].sample
  end

  def generate_bio(first_name='', last_name='', gender="none", age='')

    he_or_she = "They"
    his_or_her = "their"
    him_or_her = "they"

    case gender 
     when "male"
        he_or_she = "he"
        his_or_her = "his" 
        him_or_her = "him"
     when "female"
        he_or_she = "she"
        his_or_her = "her"
        him_or_her = "her"
     end 

    from, marital_status, food, food_type, realtonship, relationship_type, mood = ""

    mood = ["happily", "begrudingly", "reluctantly"].sample
    food_type = ["loves", "hates", "is alergic to", "is partial to", "addicted to", "makes a mean", "has an insatiable appetite for"].sample
    relationship_type = ["a very close", "a strangely erotic", "an icy", "a happy", "a complicated", "a bad", "a 'special'", "a jovial"].sample
    marital_status = Faker::Demographic.marital_status.downcase #=> "Widowed"
    food = Faker::Food.dish.downcase #=> "Caesar Salad"

    from = generate_place

    
    
    relative = gen_random_num(3)
    case relative
    when 1
      realtonship = Faker::Relationship.familial #=> "Mother" or "Grandmother"
    when 2
      realtonship = Faker::Relationship.spouse #=> "Husband" or "Wife"
    when 3
      realtonship = Faker::Relationship.parent #=> "Father" or "Mother"
      
    end
    
    ##childhood
    
    num = gen_random_num(10)
     case num
      when (1..7)
        born = " was born #{["during a terrible storm", "on the longest day of summer", "beneath a blood-moon", "on the ides of march",  "during an earthquake", "into abject poverty", "into extreme wealth", "in the middle or warzone", "in a world where it's everyone for themselves" ].sample} #{age} years ago"
      when (8..10)
        born = " was born #{age} years ago"
      end 


    childhood1 = ["orphaned at an early age, so was forced to fend for #{him_or_her}self", "raised by #{his_or_her} father after #{his_or_her} mother died during child birth", "raised by #{his_or_her} mother after #{his_or_her} father left while #{he_or_she} was still a baby", "was raised working the land in a small village", "was profoundly affected by the death of #{his_or_her} #{relative} when #{he_or_she} was young and was never able to let go if it", "was kidnapped by theives at at a young age "].sample
    childhood2 = ["grew up always wanting to be a soldier", "always knew #{he_or_she} was destined for greatness", "had a romantic connection in #{his_or_her} adolescent years, which deeply influenced #{his_or_her} personality"].sample


    fact = ["#{food_type} #{food}", "always seems to smell faintly of vegetables", "has an insatiable bloodlust", "never learned how to ride a bicycle", "is cursed with a photographic memory", "is blessed with a photographic memory", "gets nauseated around the smell of bins", "has a strange obsession with the Mel Gibson film 'Signs'", "is a universal blood donor", "is a vegetarian", "defines #{him_or_her}self as pansexual", "enjoys moonlit walks on the beach", "is left handed", "sings in an accapella choir", "loves correcting other people's grammar", "mastered the blade at a younge age", "feels the need for seed", "can take only shit whilst completely naked"].shuffle
    fact1 = fact[0]
    fact2 = fact[1]
    fact3 = fact[3]


    currently = ["#{he_or_she} hopes to find a place to call home and finally find tranquility #{he_or_she} has never had", "#{he_or_she} is currently still searching for #{his_or_her} true calling", "#{he_or_she} hopes to shed the memories of the past and finally find peace", "is currently searching for a place #{he_or_she} can call home", "#{he_or_she} has sworn to seek vengence on those that have wronged #{him_or_her}", "#{he_or_she} is finally getting around to writing #{his_or_her} first novel", "will seek #{his_or_her} vengece in this life or the next" ].sample

 

    
    # "#{first_name} #{last_name} is from #{from}. #{he_or_she} is #{mood} #{marital_status.downcase}. #{he_or_she} #{food_type} #{food}. #{he_or_she} has #{relationship_type} relationship with #{his_or_her} #{realtonship.downcase}."
      if first_name 
        childhood1 = "#{first_name} was #{childhood1}"
      else 
        childhood1.capitalize
      end 


    "#{childhood1}. #{he_or_she.capitalize} #{childhood2}. #{he_or_she.capitalize} #{fact1}, #{fact2} and #{fact3}. #{currently.capitalize}."

  end

  def generate_place
    places = [ 'Adurant', 'Aenor’s Hill', 'Aerilon', 'Amram', 'Anfauglith', 'Aquarin', 'Aramoor', 'Arlan’s Way', 'Arnor', 'Arrendyll', 'Ashdrift', 'Avaglade', 'Azmar', 'Battlecliff', 'Bay of Balar', 'Begger’s Hole', 'Beleriand', 'Black Hollow', 'Blue Field', 'Boatwright', 'Briar Glen', 'Brickelwhyte', 'Brilthor', 'Broken Shield', 'Bruinen', 'Bullmar', 'Camorrus', 'Carran', 'City of Fire', 'Coalfell', 'Corralis', 'Crow’s Cry', 'Cullfield', 'Darendale', 'Darkwell', 'Deathfall', 'Death’s Door', 'Dimbar', 'Doonatel', 'Doriath', 'Dorlomin', 'Dorthonion', 'Doveseal', 'Doveshire', 'Dragon’s Coast', 'Dry Gulch', 'Duarudelf', 'Duskendale', 'East Armistice', 'Eastford', 'Easthaven', 'Eastwatch', 'Ecrin', 'Eden’s Gulf', 'Ekaia', 'Elbright', 'Eldarmar', 'Embertown', 'End’s Run', 'Erast', 'Ered', 'Erede', 'Eredluin', 'Eribourne', 'Ethermoor', 'Fallenedge', 'Fangorn', 'Far', 'Water', 'Firebend', 'Firecrow', 'Fool’s March', 'Freevale', 'Frostenvale', 'Frostfangs', 'Frostford', 'Garen’s Well', 'Glaskerville', 'Goldcrest', 'Goldenleaf', 'Greenflower', 'Greenglade', 'Greenloft', 'Gulltown', 'Haran', 'Harlen', 'Harsengaard', 'Hillfar', 'Hogsfeet', 'Hollyhead', 'Horizon’s End', 'Hull', 'Hwen', 'Icemeet', 'Iron', 'Hills', 'Ironforge', 'Irragin', 'Jarren’s Outpost', 'Jongvale', 'Kara’s Vale', 'Knife’s Edge', 'Lakeshore', 'Lakestown', 'Lamorra', 'Last', 'Lock', 'Leeside', 'Legolin', 'Linesse', 'Lochley', 'Lothlann', 'Lullin', 'Maglor’s Gap', 'Mahalaga', 'Marren’s Eve', 'Merriwich', 'Millstone', 'Moonbright', 'Mountmend', 'Nandungorteb', 'Nargorthon', 'Nearon', 'New Cresthill', 'Nogrod', 'Northpass', 'Northstead', 'Northtown', 'Nuxvar', 'Oakensword', 'Oakheart', 'Oar’s Rest', 'Old Ashton', 'Orrinshire', 'Ozryn', 'Pavv', 'Pella’s Wish', 'Pineland', 'Pinnella Pass', 'Pony Run', 'Pran', 'Pyreacre', 'Quan Ma', 'Queenstown', 'Ramshorn', 'Red Hawk', 'Rhaunar', 'Rhudaur', 'Rhuin', 'Rivermouth', 'Riverwind', 'Saker Keep', 'Seameet', 'Shadestown', 'Shiny Ship', 'Ship’s Haven', 'Silverkeep', 'Snake’s Canyon', 'Snowforge', 'Snowmelt', 'South Warren', 'Southern Vale', 'Squall’s End', 'Stone’s Throw', 'Stonewatch', 'Strong Oak', 'Suilwen', 'Sundance', 'Swordbreak', 'Tarrin', 'Taur-in-duinath', 'Thales', 'The Gale', 'The Last Battle', 'Three Streams', 'Trudid', 'Ubbin Falls', 'Ula’ree', 'Vale of Doom', 'Valley of Dusk', 'Veritas', 'Vertrock', 'Violl’s Garden', 'Wolfsrealm', 'Wellspring', 'Westend', 'Westwend', 'Whiteridge', 'Whiterun', 'Widow’s Peak', 'Willowdale', 'Windrip', 'Wintergale', 'Wintervale', 'Wolfden', 'Xan’s Bequest', 'Xynnar', 'Yarrin', 'Yellowseed', 'Yi Ti', 'Zao Ying', 'Zeffari', 'Zumka' 
    ].sample
  end

  def generate_alignment
    alignment = ["chaotic", "neutral", "lawful"].sample + " " + ["good", "neutral", "evil"].sample
    alignment == "neutral neutral" ? "true neutral" : alignment
  end

  def generate_trait_positive
    ["accessible", "adaptable", "adventuros", "affable", "affectionate", "agreeable", "ambitious", "amicable", "amusing", "articulate", "good sense of balance", "benevolent", "brave", "bright", "brilliant", "broad-minded", "capable", "captivating", "careful", "caring", "charming", "clear-headed", "clever", "compassionate", "confident", "conscientious", "considerate", "courageous", "courteous", "creative", "curious", "daring", "decent", "dependable", "determined", "dignified", "diligent", "diplomatic", "disciplined", "discreet", "easy-going", "educated", "efficient", "eloquent", "empathetic", "encouraging", "energetic", "exuberant", "fair", "faithful", "firm", "flexible", "focused", "forgiving", "frank", "friendly", "funny", "generous", "gentle", "genuine", "gracious", "gregarious", "hard-working", "helpful", "heroic", "honest", "humble", "humorous", "idealistic", "imaginative", "impartial", "incisive", "independent", "innovative", "insightful", "intelligent", "intuitive", "inventive", "keen", "kind", "liberal", "logical", "lovable", "loyal", "magnanimous", "mature", "meticulous", "modest", "neat", "non-authoritarian", "obedient", "objective", "open", "optimistic", "orderly", "organised", "passionate", "patient", "peaceful", "perceptive", "persistent", "personable", "persuasive", "pioneering", "plucky", "polite", "powerful", "practical", "precise", "principled", "profound", "protective", "prudent", "punctual", "quick-witted", "quiet", "rational", "relaxed", "reliable", "reserved", "resourceful", "responsible", "romantic", "scrupulous", "secure", "self-confident", "self-disciplined", "selfless", "sensible", "sensitive", "shy", "sincere", "skillful", "sociable", "spontaneous", "sporting", "stable", "steadfast", "stoic", "suave", "well endowed", "subtle", "sympathetic", "tasteful", "through", "thoughtful", "tidy", "tolerant", "tough", "unassuming", "understanding", "versatile", "vivacious", "warm", "well-read", "willing", "wise", "witty"
    ].sample
  end

  def generate_trait_negative
    ["abrasive", "aggressive", "aimless", "angry", "anxious", "arrogant", "belligerent", "bitchy", "blunt", "boorish", "boring", "callous", "calculating", "careless", "caustic", "charmless", "cold", "course", "compulsive", "conceited", "cowardly", "crafty", "crazy", "cruel", "cunning", "deceitful", "demanding", "dependant", "desperate", "destructive", "detached", "difficult", "dishonest", "disloyal", "disobedient", "disruptive", "dogmatic", "dull", "envious", "erratic", "extreme", "fanatical", "foolish", "forgetful", "fussy", "gloomy", "greedy", "grim", "grumpy", "gullible", "harsh", "hateful", "hostile", "hesitant", "ignorant", "impatient", "impractical", "impulsive", "inconsiderate", "indecisive", "inflexible", "inhibited", "insecure", "insensitive", "insulting", "incredibly racist", "irresponsible", "jealous", "judgemental", "a killjoy", "lazy", "malicious", "materialistic", "mean", "melodramatic", "miserable", "moody", "narcissistic", "narrow-minded", "nasty", "neglectful", "gassy", "foul-smelling", "neurotic", "obnoxious", "obsessive", "outrageous", "paranoid", "passive", "pathetic", "patronising", "perverted", "petty", "pessimistic", "petulant", "picky", "pompous", "predatory", "predujuced", "pretentious", "puritanical", "quick-tempered", "rigid", "rude", "ruthless", "sadistic", "sanctimonious", "self-indulgent", "selfish", "shameless", "slovenly", "sly", "sneaky", "sordid", "stingy", "stubborn", "stupid", "superficial", "surly", "tactless", "tasteless", "temperamental", "tense", "thoughtless", "touchy", "truculent", "uncaring", "unreliable", "unruly", "untidy", "a total slob", "vain", "vengeful", "vindictive", "weak", "wilful", "withdrawn"
    ].sample
  end

  def generate_age
    num = gen_random_num(10)
    case num
    when (1..7)
      return (18..50).to_a.sample
    when (8..9)
      return (50..300).to_a.sample
    when 10
      return (500..2000).to_a.sample
    end
  end

  def generate_status
    num = gen_random_num(10)
    case num
    when (1..7)
      return ["Alive"].sample
    when (8..10)
      return ["MIA", "Exiled", "Comatose", "Dormant"].sample
    end
  end

  def generate_gender
    ["male", "female"].sample
  end

  def generate_feats
    num = gen_random_num(2)
    achievement = ["destroyer", "champion", "ruler", "defeater", "overlord", "slayer", "champion", "player", "butcher", "hero"].sample
    people = generate_species
    place = generate_place

    case num
    when 1
      return "#{achievement.capitalize} of the #{people}s"
    when 2
      return "#{achievement.capitalize} of #{place}"
    end
  end

  def generate_sprite(species='any')
    dwarf_king = "#585858,#ffeb3b,#585858,#585858,#585858,#ffeb3b,#585858,#585858,#585858,#ffeb3b,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#ffeb3b,#ffeb3b,#585858,#ffeb3b,#ff5722,#ffeb3b,#585858,#ffeb3b,#ffeb3b,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#f2de2c,#ffeb3b,#ffeb3b,#ffeb3b,#f2de2c,#f2de2c,#ffeb3b,#ffeb3b,#f2de2c,#585858,#585858,#ffeb3b,#585858,#585858,#585858,#585858,#5e3201,#5e3201,#5e3201,#684b28,#684b28,#684b28,#765a39,#765a39,#765a39,#585858,#ffeb3b,#ffeb3b,#ffeb3b,#585858,#585858,#585858,#5e3201,#5e3201,#5e3201,#684b28,#684b28,#765a39,#765a39,#765a39,#765a39,#585858,#585858,#ffeb3b,#585858,#585858,#585858,#585858,#5e3201,#5e3201,#371d01,#371d01,#371d01,#fdcbb2,#371d01,#371d01,#371d01,#585858,#585858,#607d8b,#585858,#585858,#585858,#585858,#fdcbb2,#5e3201,#e4bca8,#000000,#e4bca8,#fdcbb2,#fdcbb2,#000000,#fdcbb2,#585858,#585858,#ffc107,#585858,#585858,#585858,#585858,#fdcbb2,#5e3201,#e4bca8,#000000,#e4bca8,#e4bca8,#fdcbb2,#000000,#fdcbb2,#585858,#585858,#ffc107,#585858,#585858,#585858,#585858,#5e3201,#e4bca8,#e4bca8,#5e3201,#5e3201,#5e3201,#5e3201,#5e3201,#fdcbb2,#585858,#585858,#ffc107,#585858,#585858,#585858,#585858,#5e3201,#5e3201,#5e3201,#5e3201,#ecf0f2,#ecf0f2,#e4bca8,#5e3201,#5e3201,#585858,#585858,#ffc107,#585858,#585858,#585858,#585858,#427285,#596b74,#427285,#ffc107,#216d4f,#216d4f,#216d4f,#ffc107,#596b74,#585858,#585858,#ffc107,#585858,#585858,#585858,#585858,#427285,#596b74,#427285,#758288,#ffc107,#2c8a63,#ffc107,#758288,#596b74,#758288,#2c8a63,#fdcbb2,#585858,#585858,#585858,#585858,#2c8a63,#2c8a63,#427285,#758288,#2c8a63,#ffc107,#2c8a63,#758288,#596b74,#596b74,#216d4f,#e4bca8,#585858,#585858,#585858,#585858,#fdcbb2,#e4bca8,#427285,#758288,#000000,#ff9800,#000000,#758288,#596b74,#585858,#585858,#ffc107,#585858,#585858,#585858,#585858,#055576,#055576,#055576,#055576,#055576,#055576,#055576,#055576,#055576,#585858,#585858,#ffc107,#585858,#585858,#585858,#585858,#585858,#000000,#000000,#000000,#585858,#585858,#000000,#000000,#000000,#585858,#585858,#ffc107,#585858,#585858,#585858"
    skeleton = "#585858,#585858,#585858,#585858,#f0eded,#f0eded,#f0eded,#f7f2f2,#f7f2f2,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#dfdfdf,#f0eded,#f0eded,#f0eded,#f7f2f2,#f7f2f2,#f7f2f2,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#dfdfdf,#dfdfdf,#f0eded,#f0eded,#f0eded,#f7f2f2,#f7f2f2,#f7f2f2,#f7f2f2,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#dfdfdf,#dfdfdf,#f0eded,#000000,#f0eded,#f7f2f2,#f7f2f2,#000000,#f7f2f2,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#dfdfdf,#dfdfdf,#f0eded,#000000,#f0eded,#000000,#f7f2f2,#000000,#f7f2f2,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#dfdfdf,#dfdfdf,#f0eded,#f0eded,#f0eded,#f0eded,#f7f2f2,#f7f2f2,#f7f2f2,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#dfdfdf,#dfdfdf,#f0eded,#000000,#f0eded,#000000,#f7f2f2,#585858,#585858,#f7f2f2,#585858,#f7f2f2,#585858,#585858,#585858,#8d6fc4,#8d6fc4,#625083,#625083,#625083,#8d6fc4,#8d6fc4,#8d6fc4,#8d6fc4,#585858,#585858,#f7f2f2,#585858,#585858,#807d7d,#585858,#8d6fc4,#807d7d,#625083,#625083,#625083,#8d6fc4,#8d6fc4,#8d6fc4,#625083,#625083,#8d6fc4,#dfdfdf,#585858,#585858,#807d7d,#807d7d,#807d7d,#ff9800,#625083,#625083,#625083,#8d6fc4,#8d6fc4,#8d6fc4,#625083,#625083,#8d6fc4,#dfdfdf,#585858,#585858,#807d7d,#807d7d,#ff9800,#807d7d,#625083,#625083,#625083,#8d6fc4,#8d6fc4,#8d6fc4,#585858,#585858,#585858,#f7f2f2,#585858,#585858,#807d7d,#ff9800,#807d7d,#807d7d,#795548,#795548,#795548,#795548,#795548,#795548,#585858,#585858,#f7f2f2,#585858,#f7f2f2,#585858,#ff9800,#807d7d,#807d7d,#807d7d,#625083,#625083,#625083,#625083,#625083,#625083,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#807d7d,#807d7d,#362259,#625083,#585858,#585858,#625083,#625083,#625083,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#362259,#362259,#625083,#585858,#585858,#362259,#362259,#625083,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#dfdfdf,#dfdfdf,#f0eded,#585858,#585858,#dfdfdf,#dfdfdf,#f0eded,#585858,#585858,#585858,#585858,#585858,#585858"
    mermaid = "#585858,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#3f51b5,#3f51b5,#3f51b5,#3f51b5,#3f51b5,#3f51b5,#3f51b5,#3f51b5,#585858,#585858,#585858,#585858,#3f51b5,#3f51b5,#3f51b5,#3f51b5,#3f51b5,#673ab7,#673ab7,#673ab7,#673ab7,#ff9800,#ff9800,#ff9800,#585858,#585858,#585858,#3f51b5,#3f51b5,#3f51b5,#673ab7,#673ab7,#3f51b5,#3f51b5,#3f51b5,#3f51b5,#ff9800,#ff9800,#ff9800,#00bcd4,#585858,#585858,#585858,#585858,#3f51b5,#3f51b5,#3f51b5,#3f51b5,#673ab7,#673ab7,#673ab7,#673ab7,#ff9800,#ff9800,#ff9800,#ff9800,#585858,#585858,#3f51b5,#3f51b5,#3f51b5,#3f51b5,#3f51b5,#3f51b5,#3f51b5,#585858,#585858,#585858,#ff9800,#ff9800,#ff9800,#f44336,#585858,#3f51b5,#3f51b5,#3f51b5,#3f51b5,#3f51b5,#3f51b5,#585858,#585858,#585858,#ff9800,#ff9800,#ff9800,#ff9800,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#ff9800,#ff9800,#ff9800,#4caf50,#ff9800,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#ff9800,#ff9800,#ff9800,#ff9800,#ff9800,#ff9800,#4caf50,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#ee588b,#e91e63,#e91e63,#e91e63,#ff9800,#ff9800,#585858,#607d8b,#585858,#607d8b,#585858,#585858,#585858,#585858,#585858,#585858,#e91e63,#e91e63,#e91e63,#ee588b,#e91e63,#ff9800,#607d8b,#585858,#607d8b,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#ee588b,#e91e63,#ee588b,#e91e63,#585858,#ff9800,#585858,#607d8b,#585858,#607d8b,#585858,#585858,#585858,#585858,#585858,#e91e63,#e91e63,#e91e63,#e91e63,#e91e63,#585858,#585858,#795548,#585858,#607d8b,#585858,#e91e63,#585858,#585858,#585858,#ee588b,#e91e63,#ee588b,#e91e63,#ee588b,#585858,#585858,#795548,#585858,#585858,#585858,#585858,#ee588b,#ee588b,#e91e63,#e91e63,#e91e63,#e91e63,#e91e63,#e91e63,#585858,#585858,#795548,#585858,#585858,#585858,#585858,#585858,#585858,#e91e63,#e91e63,#ee588b,#585858,#585858,#585858,#585858,#585858,#795548,#585858,#585858,#585858,#585858,#585858,#585858,#e91e63,#ee588b,#585858,#585858,#585858,#585858,#585858,#585858,#795548,#585858,#585858,#585858,#585858,#585858,#585858,#585858"
    adventurer = "#bfbfbf,#585858,#795548,#585858,#585858,#585858,#795548,#795548,#795548,#7d6861,#7d6861,#7d6861,#795548,#795548,#795548,#795548,#bfbfbf,#bfbfbf,#bfbfbf,#585858,#585858,#795548,#795548,#795548,#795548,#7d6861,#7d6861,#7d6861,#795548,#795548,#795548,#795548,#bfbfbf,#bfbfbf,#bfbfbf,#585858,#585858,#795548,#795548,#795548,#795548,#7d6861,#7d6861,#7d6861,#795548,#795548,#795548,#795548,#bfbfbf,#585858,#795548,#ff5722,#585858,#795548,#795548,#795548,#d5b497,#dab697,#dab697,#fed9bf,#fed9bf,#fed9bf,#fed9bf,#fed9bf,#585858,#585858,#ff5722,#585858,#585858,#fed9bf,#795548,#a58871,#dab697,#000000,#dab697,#fed9bf,#fed9bf,#fed9bf,#000000,#fed9bf,#585858,#585858,#795548,#ff5722,#585858,#fed9bf,#795548,#a58871,#dab697,#2196f3,#dab697,#dab697,#fed9bf,#fed9bf,#2196f3,#fed9bf,#585858,#585858,#795548,#585858,#585858,#795548,#a58871,#a58871,#dab697,#dab697,#dab697,#dab697,#dab697,#fed9bf,#fed9bf,#fed9bf,#585858,#585858,#795548,#585858,#7e2e14,#795548,#a58871,#a58871,#d5b497,#dab697,#dab697,#dadee1,#dadee1,#dab697,#fed9bf,#fed9bf,#585858,#585858,#795548,#585858,#7e2e14,#7e2e14,#7e2e14,#7e2e14,#607d8b,#9eadb5,#607d8b,#9eadb5,#607d8b,#9eadb5,#607d8b,#3e51b2,#585858,#585858,#fed9bf,#dab697,#dab697,#6170c2,#607d8b,#7e2e14,#9eadb5,#607d8b,#9eadb5,#607d8b,#9eadb5,#607d8b,#9eadb5,#3e51b2,#585858,#585858,#fed9bf,#dab697,#6170c2,#6170c2,#607d8b,#7e2e14,#607d8b,#9eadb5,#607d8b,#9eadb5,#607d8b,#9eadb5,#607d8b,#3e51b2,#585858,#585858,#795548,#585858,#7e2e14,#7e2e14,#7e2e14,#7e2e14,#9eadb5,#607d8b,#9eadb5,#607d8b,#9eadb5,#607d8b,#9eadb5,#dab697,#585858,#585858,#795548,#585858,#585858,#585858,#7e2e14,#7e2e14,#7e2e14,#7e2e14,#7e2e14,#7e2e14,#7e2e14,#7e2e14,#7e2e14,#dab697,#585858,#585858,#795548,#585858,#585858,#585858,#6170c2,#6170c2,#6170c2,#6170c2,#6170c2,#6170c2,#6170c2,#6170c2,#6170c2,#585858,#585858,#585858,#795548,#585858,#585858,#585858,#3e51b2,#6170c2,#585858,#585858,#585858,#585858,#3e51b2,#6170c2,#585858,#585858,#585858,#585858,#795548,#585858,#585858,#585858,#796259,#55453e,#585858,#585858,#585858,#585858,#796259,#55453e,#585858,#585858"
    halfling_wizard = "#585858,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#f5744b,#ff5722,#f5744b,#585858,#585858,#585858,#585858,#585858,#b161bf,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#ff5722,#ff5722,#ff5722,#ff5722,#ff5722,#585858,#585858,#585858,#9c27b0,#585858,#585858,#585858,#585858,#585858,#585858,#d8b2a6,#d8b2a6,#d8b2a6,#ff5722,#ff5722,#ff5722,#dfc8c0,#585858,#585858,#795548,#585858,#585858,#585858,#585858,#585858,#d8b2a6,#d8b2a6,#d8b2a6,#d8b2a6,#d8b2a6,#d8b2a6,#dfc8c0,#dfc8c0,#dfc8c0,#585858,#795548,#585858,#585858,#585858,#585858,#dfc8c0,#d8b2a6,#d8b2a6,#ffffff,#8bc34a,#d8b2a6,#d8b2a6,#ffffff,#8bc34a,#dfc8c0,#585858,#795548,#585858,#585858,#585858,#585858,#dfc8c0,#d8b2a6,#d8b2a6,#d8b2a6,#d8b2a6,#d8b2a6,#d8b2a6,#dfc8c0,#dfc8c0,#dfc8c0,#585858,#795548,#585858,#585858,#585858,#585858,#585858,#d8b2a6,#d8b2a6,#d8b2a6,#d8b2a6,#ebe3e3,#ebe3e3,#d8b2a6,#dfc8c0,#dfc8c0,#585858,#795548,#585858,#585858,#585858,#585858,#585858,#03a9f4,#2196f3,#c1522f,#c1522f,#c7c3c2,#f44336,#c7c3c2,#c1522f,#2196f3,#585858,#795548,#585858,#585858,#585858,#585858,#585858,#03a9f4,#2196f3,#c1522f,#c1522f,#c7c3c2,#c7c3c2,#c7c3c2,#c1522f,#2196f3,#2196f3,#d8b2a6,#585858,#585858,#585858,#585858,#585858,#03a9f4,#2196f3,#c1522f,#c1522f,#c7c3c2,#c7c3c2,#c7c3c2,#c1522f,#585858,#2196f3,#d8b2a6,#585858,#585858,#585858,#585858,#585858,#dfc8c0,#d8b2a6,#c1522f,#c1522f,#c7c3c2,#c7c3c2,#c7c3c2,#c1522f,#585858,#585858,#795548,#585858,#585858,#585858,#585858,#585858,#575b3f,#575b3f,#676c48,#676c48,#676c48,#676c48,#676c48,#676c48,#585858,#585858,#795548,#585858,#585858,#585858,#585858,#585858,#585858,#575b3f,#676c48,#585858,#585858,#575b3f,#676c48,#585858,#585858,#585858,#795548,#585858,#585858,#585858,#585858,#585858,#585858,#796963,#795548,#585858,#585858,#796963,#795548,#585858,#585858,#585858,#795548"
    devil = "#585858,#ffeb3b,#607d8b,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#ffeb3b,#585858,#585858,#ffeb3b,#607d8b,#585858,#585858,#585858,#962720,#962720,#962720,#e32f22,#e32f22,#e32f22,#585858,#ffeb3b,#ffeb3b,#585858,#585858,#585858,#607d8b,#ffeb3b,#962720,#962720,#962720,#962720,#962720,#e32f22,#e32f22,#e32f22,#e32f22,#ffeb3b,#585858,#585858,#585858,#585858,#607d8b,#c4b424,#962720,#962720,#962720,#962720,#962720,#e32f22,#e32f22,#e32f22,#e32f22,#e32f22,#585858,#585858,#585858,#585858,#607d8b,#585858,#962720,#962720,#962720,#ffeb3b,#ffeb3b,#e32f22,#e32f22,#e32f22,#ffeb3b,#e32f22,#585858,#585858,#585858,#585858,#607d8b,#585858,#962720,#962720,#962720,#ffeb3b,#c4b424,#962720,#ffeb3b,#e32f22,#c4b424,#e32f22,#585858,#585858,#585858,#585858,#607d8b,#585858,#962720,#962720,#962720,#962720,#962720,#962720,#e32f22,#e32f22,#e32f22,#e32f22,#585858,#585858,#585858,#585858,#607d8b,#585858,#962720,#611a15,#962720,#962720,#c4b84e,#962720,#c4b84e,#e32f22,#e32f22,#e32f22,#585858,#585858,#585858,#673ab7,#673ab7,#673ab7,#611a15,#611a15,#611a15,#c4b84e,#ffeb3b,#d2c23a,#d2c23a,#611a15,#611a15,#585858,#585858,#585858,#585858,#e4b62a,#e4b62a,#e32f22,#e32f22,#962720,#962720,#962720,#962720,#962720,#962720,#962720,#e32f22,#585858,#585858,#585858,#585858,#e4b62a,#e4b62a,#e32f22,#e32f22,#962720,#962720,#c4b84e,#8e853c,#8e853c,#ffeb3b,#962720,#e32f22,#585858,#585858,#585858,#585858,#585858,#673ab7,#585858,#962720,#962720,#962720,#962720,#962720,#962720,#962720,#962720,#e4b62a,#585858,#585858,#585858,#585858,#585858,#673ab7,#585858,#962720,#962720,#962720,#962720,#962720,#962720,#962720,#962720,#e4b62a,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#962720,#962720,#962720,#962720,#962720,#962720,#962720,#962720,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#962720,#962720,#585858,#585858,#962720,#962720,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#000000,#000000,#585858,#585858,#000000,#000000,#585858,#585858,#585858,#585858,#585858"
    ghost = "#585858,#585858,#585858,#382064,#432e67,#432e67,#432e67,#432e67,#554079,#554079,#554079,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#382064,#432e67,#432e67,#432e67,#432e67,#432e67,#554079,#554079,#554079,#382064,#585858,#585858,#585858,#585858,#585858,#585858,#382064,#432e67,#432e67,#432e67,#382064,#432e67,#554079,#382064,#554079,#554079,#382064,#585858,#585858,#585858,#585858,#585858,#382064,#432e67,#432e67,#432e67,#33c466,#432e67,#554079,#33c466,#554079,#554079,#382064,#585858,#585858,#585858,#585858,#585858,#382064,#432e67,#432e67,#432e67,#382064,#432e67,#432e67,#382064,#554079,#554079,#382064,#585858,#585858,#585858,#585858,#585858,#382064,#432e67,#432e67,#432e67,#432e67,#432e67,#432e67,#554079,#554079,#554079,#554079,#554079,#554079,#585858,#585858,#585858,#585858,#382064,#432e67,#432e67,#432e67,#33c466,#33c466,#33c466,#554079,#554079,#554079,#554079,#585858,#585858,#382064,#432e67,#432e67,#432e67,#432e67,#432e67,#432e67,#432e67,#432e67,#432e67,#554079,#554079,#554079,#585858,#585858,#585858,#382064,#432e67,#432e67,#432e67,#432e67,#432e67,#432e67,#432e67,#432e67,#432e67,#554079,#585858,#585858,#585858,#585858,#585858,#585858,#382064,#382064,#432e67,#432e67,#432e67,#432e67,#432e67,#432e67,#432e67,#554079,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#382064,#432e67,#432e67,#432e67,#432e67,#432e67,#432e67,#554079,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#382064,#432e67,#432e67,#432e67,#432e67,#432e67,#554079,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#382064,#432e67,#432e67,#432e67,#432e67,#554079,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#382064,#432e67,#432e67,#432e67,#554079,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#382064,#432e67,#432e67,#554079,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#382064,#554079,#554079,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#585858,#585858"
    giant = "#585858,#585858,#585858,#795548,#98796e,#795548,#98796e,#ffeb3b,#000000,#98796e,#ffeb3b,#98796e,#795548,#585858,#585858,#585858,#585858,#585858,#585858,#795548,#98796e,#795548,#98796e,#ffeb3b,#ffeb3b,#ffeb3b,#ffeb3b,#98796e,#795548,#585858,#585858,#585858,#585858,#585858,#585858,#ff9800,#ff9800,#ff9800,#f0bf77,#ff9800,#f0bf77,#ff9800,#ff9800,#ff9800,#ff9800,#585858,#585858,#585858,#585858,#585858,#585858,#f0bf77,#ff9800,#ff9800,#ff9800,#ff9800,#ff9800,#ff9800,#ff9800,#ff9800,#ff9800,#585858,#585858,#585858,#585858,#585858,#ff9800,#ff9800,#ff9800,#ff9800,#585858,#585858,#585858,#ff9800,#ff9800,#ff9800,#f0bf77,#ff9800,#585858,#585858,#585858,#585858,#ff9800,#f0bf77,#ff9800,#f0bf77,#585858,#585858,#585858,#ff9800,#ff9800,#ff9800,#ff9800,#ff9800,#585858,#585858,#585858,#585858,#ff9800,#ff9800,#ff9800,#f0bf77,#585858,#585858,#585858,#ff9800,#f0bf77,#ff9800,#ff9800,#ff9800,#585858,#585858,#585858,#585858,#f0bf77,#ff9800,#ff9800,#ff9800,#585858,#585858,#585858,#f0bf77,#f0bf77,#ff9800,#ff9800,#ff9800,#585858,#585858,#585858,#585858,#ff9800,#ff9800,#ff9800,#ff9800,#585858,#585858,#585858,#b06b06,#ff9800,#ff9800,#ff9800,#f0bf77,#585858,#585858,#585858,#f0bf77,#ff9800,#b06b06,#b06b06,#b06b06,#585858,#585858,#585858,#585858,#b06b06,#b06b06,#b06b06,#b06b06,#585858,#585858,#585858,#b06b06,#b06b06,#b06b06,#fed9bf,#e3b290,#585858,#585858,#585858,#585858,#e3b290,#fed9bf,#fed9bf,#585858,#585858,#585858,#585858,#585858,#e3b290,#fed9bf,#fed9bf,#e3b290,#585858,#585858,#585858,#585858,#e3b290,#fed9bf,#fed9bf,#e3b290,#585858,#585858,#585858,#585858,#585858,#fed9bf,#fed9bf,#e3b290,#585858,#585858,#585858,#585858,#e3b290,#fed9bf,#fed9bf,#585858,#585858,#585858,#585858,#585858,#585858,#fed9bf,#fed9bf,#e3b290,#585858,#585858,#585858,#585858,#e3b290,#fed9bf,#fed9bf,#585858,#585858,#585858,#585858,#98796e,#795548,#795548,#795548,#795548,#585858,#585858,#585858,#585858,#795548,#795548,#795548,#795548,#98796e,#585858,#585858,#98796e,#98796e,#98796e,#795548,#795548,#585858,#585858,#585858,#585858,#795548,#98796e,#98796e,#98796e,#98796e,#585858"
    giant_red = '#585858,#585858,#585858,#795548,#98796e,#795548,#98796e,#ffeb3b,#000000,#98796e,#ffeb3b,#98796e,#795548,#585858,#585858,#585858,#585858,#585858,#585858,#795548,#98796e,#795548,#98796e,#ffeb3b,#ffeb3b,#ffeb3b,#ffeb3b,#98796e,#795548,#585858,#585858,#585858,#585858,#585858,#585858,#ff5722,#ff5722,#ff5722,#dfa694,#ff5722,#dfa694,#ff5722,#ff5722,#ff5722,#ff5722,#585858,#585858,#585858,#585858,#585858,#585858,#dfa694,#ff5722,#ff5722,#ff5722,#ff5722,#ff5722,#ff5722,#ff5722,#ff5722,#ff5722,#585858,#585858,#585858,#585858,#585858,#ff5722,#ff5722,#ff5722,#ff5722,#585858,#585858,#585858,#ff5722,#ff5722,#ff5722,#dfa694,#ff5722,#585858,#585858,#585858,#585858,#ff5722,#dfa694,#ff5722,#dfa694,#585858,#585858,#585858,#ff5722,#ff5722,#ff5722,#ff5722,#ff5722,#585858,#585858,#585858,#585858,#ff5722,#ff5722,#ff5722,#dfa694,#585858,#585858,#585858,#ff5722,#dfa694,#ff5722,#ff5722,#ff5722,#585858,#585858,#585858,#585858,#dfa694,#ff5722,#ff5722,#ff5722,#585858,#585858,#585858,#dfa694,#dfa694,#ff5722,#ff5722,#ff5722,#585858,#585858,#585858,#585858,#ff5722,#ff5722,#ff5722,#ff5722,#585858,#585858,#585858,#fe3e02,#ff5722,#ff5722,#ff5722,#dfa694,#585858,#585858,#585858,#dfa694,#ff5722,#fe3e02,#fe3e02,#fe3e02,#585858,#585858,#585858,#585858,#fe3e02,#fe3e02,#fe3e02,#fe3e02,#585858,#585858,#585858,#fe3e02,#fe3e02,#fe3e02,#fed9bf,#e3b290,#585858,#585858,#585858,#585858,#e3b290,#fed9bf,#fed9bf,#585858,#585858,#585858,#585858,#585858,#e3b290,#fed9bf,#fed9bf,#e3b290,#585858,#585858,#585858,#585858,#e3b290,#fed9bf,#fed9bf,#e3b290,#585858,#585858,#585858,#585858,#585858,#fed9bf,#fed9bf,#e3b290,#585858,#585858,#585858,#585858,#e3b290,#fed9bf,#fed9bf,#585858,#585858,#585858,#585858,#585858,#585858,#fed9bf,#fed9bf,#e3b290,#585858,#585858,#585858,#585858,#e3b290,#fed9bf,#fed9bf,#585858,#585858,#585858,#585858,#98796e,#795548,#795548,#795548,#795548,#585858,#585858,#585858,#585858,#795548,#795548,#795548,#795548,#98796e,#585858,#585858,#98796e,#98796e,#98796e,#795548,#795548,#585858,#585858,#585858,#585858,#795548,#98796e,#98796e,#98796e,#98796e,#585858'

    case species
    when 'mermaid'
      return mermaid
    when 'giant'
      return [giant, giant_red].sample
    when 'human'
      return adventurer
    when 'halfling', 'leprechaun'
      return [dwarf_king, halfling_wizard].sample
    when 'undead'
      return [skeleton, devil, ghost].sample
    end
    return [adventurer, dwarf_king, halfling_wizard, skeleton, devil, ghost].sample
  end

  def gen_random_num(limit)
    (1..limit).to_a.sample
  end
  
end

